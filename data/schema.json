{
  "data": {
    "__schema": {
      "directives": [{
        "name": "include",
        "description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
        "onOperation": false,
        "onFragment": true,
        "onField": true,
        "args": [{
          "name": "if",
          "description": "Included when true.",
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            }
          },
          "defaultValue": null
        }]
      }, {
        "name": "skip",
        "description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
        "onOperation": false,
        "onFragment": true,
        "onField": true,
        "args": [{
          "name": "if",
          "description": "Included when true.",
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            }
          },
          "defaultValue": null
        }]
      }],
      "mutationType": {
        "name": "Mutation"
      },
      "subscriptionType": null,
      "queryType": {
        "name": "Query"
      },
      "types": [{
        "inputFields": [{
          "name": "text",
          "description": null,
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            }
          },
          "defaultValue": null
        }, {
          "name": "clientMutationId",
          "description": null,
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            }
          },
          "defaultValue": null
        }],
        "name": "AddTodoInput",
        "description": null,
        "interfaces": null,
        "enumValues": null,
        "fields": null,
        "kind": "INPUT_OBJECT",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "AddTodoPayload",
        "description": null,
        "interfaces": [],
        "enumValues": null,
        "fields": [{
          "name": "todoEdge",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "OBJECT",
              "name": "TodoEdge",
              "ofType": null
            }
          }
        }, {
          "name": "viewer",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "OBJECT",
            "name": "User",
            "ofType": null
          }
        }, {
          "name": "clientMutationId",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            }
          }
        }],
        "kind": "OBJECT",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "Mutation",
        "description": null,
        "interfaces": [],
        "enumValues": null,
        "fields": [{
          "name": "addTodo",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [{
            "name": "input",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AddTodoInput",
                "ofType": null
              }
            },
            "defaultValue": null
          }],
          "type": {
            "kind": "OBJECT",
            "name": "AddTodoPayload",
            "ofType": null
          }
        }],
        "kind": "OBJECT",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "Node",
        "description": "An object with an ID",
        "interfaces": null,
        "enumValues": null,
        "fields": [{
          "name": "id",
          "description": "The id of the object.",
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "ID",
              "ofType": null
            }
          }
        }],
        "kind": "INTERFACE",
        "possibleTypes": [{
          "kind": "OBJECT",
          "name": "Todo",
          "ofType": null
        }, {
          "kind": "OBJECT",
          "name": "User",
          "ofType": null
        }]
      }, {
        "inputFields": null,
        "name": "PageInfo",
        "description": "Information about pagination in a connection.",
        "interfaces": [],
        "enumValues": null,
        "fields": [{
          "name": "hasNextPage",
          "description": "When paginating forwards, are there more items?",
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            }
          }
        }, {
          "name": "hasPreviousPage",
          "description": "When paginating backwards, are there more items?",
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            }
          }
        }, {
          "name": "startCursor",
          "description": "When paginating backwards, the cursor to continue.",
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "SCALAR",
            "name": "String",
            "ofType": null
          }
        }, {
          "name": "endCursor",
          "description": "When paginating forwards, the cursor to continue.",
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "SCALAR",
            "name": "String",
            "ofType": null
          }
        }],
        "kind": "OBJECT",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "Query",
        "description": null,
        "interfaces": [],
        "enumValues": null,
        "fields": [{
          "name": "viewer",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "OBJECT",
            "name": "User",
            "ofType": null
          }
        }, {
          "name": "node",
          "description": "Fetches an object given its ID",
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [{
            "name": "id",
            "description": "The ID of an object",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }],
          "type": {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          }
        }],
        "kind": "OBJECT",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "Todo",
        "description": "Todo object skeleton",
        "interfaces": [{
          "kind": "INTERFACE",
          "name": "Node",
          "ofType": null
        }],
        "enumValues": null,
        "fields": [{
          "name": "id",
          "description": "The ID of an object",
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "ID",
              "ofType": null
            }
          }
        }, {
          "name": "text",
          "description": "Todo item text",
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            }
          }
        }],
        "kind": "OBJECT",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "TodoConnection",
        "description": "A connection to a list of items.",
        "interfaces": [],
        "enumValues": null,
        "fields": [{
          "name": "pageInfo",
          "description": "Information to aid in pagination.",
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "OBJECT",
              "name": "PageInfo",
              "ofType": null
            }
          }
        }, {
          "name": "edges",
          "description": "Information to aid in pagination.",
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "LIST",
            "name": null,
            "ofType": {
              "kind": "OBJECT",
              "name": "TodoEdge",
              "ofType": null
            }
          }
        }],
        "kind": "OBJECT",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "TodoEdge",
        "description": "An edge in a connection.",
        "interfaces": [],
        "enumValues": null,
        "fields": [{
          "name": "node",
          "description": "The item at the end of the edge.",
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "OBJECT",
            "name": "Todo",
            "ofType": null
          }
        }, {
          "name": "cursor",
          "description": "A cursor for use in pagination.",
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            }
          }
        }],
        "kind": "OBJECT",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "User",
        "description": "User object",
        "interfaces": [{
          "kind": "INTERFACE",
          "name": "Node",
          "ofType": null
        }],
        "enumValues": null,
        "fields": [{
          "name": "id",
          "description": "The ID of an object",
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "ID",
              "ofType": null
            }
          }
        }, {
          "name": "todos",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [{
            "name": "before",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          }, {
            "name": "after",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          }, {
            "name": "first",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "defaultValue": null
          }, {
            "name": "last",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "defaultValue": null
          }],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "OBJECT",
              "name": "TodoConnection",
              "ofType": null
            }
          }
        }],
        "kind": "OBJECT",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "__Directive",
        "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL’s execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
        "interfaces": [],
        "enumValues": null,
        "fields": [{
          "name": "name",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            }
          }
        }, {
          "name": "description",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "SCALAR",
            "name": "String",
            "ofType": null
          }
        }, {
          "name": "args",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__InputValue"
                }
              }
            }
          }
        }, {
          "name": "onOperation",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            }
          }
        }, {
          "name": "onFragment",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            }
          }
        }, {
          "name": "onField",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            }
          }
        }],
        "kind": "OBJECT",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "__EnumValue",
        "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
        "interfaces": [],
        "enumValues": null,
        "fields": [{
          "name": "name",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            }
          }
        }, {
          "name": "description",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "SCALAR",
            "name": "String",
            "ofType": null
          }
        }, {
          "name": "isDeprecated",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            }
          }
        }, {
          "name": "deprecationReason",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "SCALAR",
            "name": "String",
            "ofType": null
          }
        }],
        "kind": "OBJECT",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "__Field",
        "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
        "interfaces": [],
        "enumValues": null,
        "fields": [{
          "name": "name",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            }
          }
        }, {
          "name": "description",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "SCALAR",
            "name": "String",
            "ofType": null
          }
        }, {
          "name": "args",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__InputValue"
                }
              }
            }
          }
        }, {
          "name": "type",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            }
          }
        }, {
          "name": "isDeprecated",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            }
          }
        }, {
          "name": "deprecationReason",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "SCALAR",
            "name": "String",
            "ofType": null
          }
        }],
        "kind": "OBJECT",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "__InputValue",
        "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
        "interfaces": [],
        "enumValues": null,
        "fields": [{
          "name": "name",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            }
          }
        }, {
          "name": "description",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "SCALAR",
            "name": "String",
            "ofType": null
          }
        }, {
          "name": "type",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            }
          }
        }, {
          "name": "defaultValue",
          "description": "A GraphQL-formatted string representing the default value for this input value.",
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "SCALAR",
            "name": "String",
            "ofType": null
          }
        }],
        "kind": "OBJECT",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "__Schema",
        "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
        "interfaces": [],
        "enumValues": null,
        "fields": [{
          "name": "types",
          "description": "A list of all types supported by this server.",
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type"
                }
              }
            }
          }
        }, {
          "name": "queryType",
          "description": "The type that query operations will be rooted at.",
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            }
          }
        }, {
          "name": "mutationType",
          "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "OBJECT",
            "name": "__Type",
            "ofType": null
          }
        }, {
          "name": "subscriptionType",
          "description": "If this server support subscription, the type that subscription operations will be rooted at.",
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "OBJECT",
            "name": "__Type",
            "ofType": null
          }
        }, {
          "name": "directives",
          "description": "A list of all directives supported by this server.",
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Directive"
                }
              }
            }
          }
        }],
        "kind": "OBJECT",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "__Type",
        "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
        "interfaces": [],
        "enumValues": null,
        "fields": [{
          "name": "kind",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "NON_NULL",
            "name": null,
            "ofType": {
              "kind": "ENUM",
              "name": "__TypeKind",
              "ofType": null
            }
          }
        }, {
          "name": "name",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "SCALAR",
            "name": "String",
            "ofType": null
          }
        }, {
          "name": "description",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "SCALAR",
            "name": "String",
            "ofType": null
          }
        }, {
          "name": "fields",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [{
            "name": "includeDeprecated",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": "false"
          }],
          "type": {
            "kind": "LIST",
            "name": null,
            "ofType": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Field",
                "ofType": null
              }
            }
          }
        }, {
          "name": "interfaces",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "LIST",
            "name": null,
            "ofType": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            }
          }
        }, {
          "name": "possibleTypes",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "LIST",
            "name": null,
            "ofType": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            }
          }
        }, {
          "name": "enumValues",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [{
            "name": "includeDeprecated",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": "false"
          }],
          "type": {
            "kind": "LIST",
            "name": null,
            "ofType": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__EnumValue",
                "ofType": null
              }
            }
          }
        }, {
          "name": "inputFields",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "LIST",
            "name": null,
            "ofType": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__InputValue",
                "ofType": null
              }
            }
          }
        }, {
          "name": "ofType",
          "description": null,
          "isDeprecated": false,
          "deprecationReason": null,
          "args": [],
          "type": {
            "kind": "OBJECT",
            "name": "__Type",
            "ofType": null
          }
        }],
        "kind": "OBJECT",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "__TypeKind",
        "description": "An enum describing what kind of type a given `__Type` is.",
        "interfaces": null,
        "enumValues": [{
          "name": "SCALAR",
          "description": "Indicates this type is a scalar.",
          "isDeprecated": false,
          "deprecationReason": null
        }, {
          "name": "OBJECT",
          "description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
          "isDeprecated": false,
          "deprecationReason": null
        }, {
          "name": "INTERFACE",
          "description": "Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.",
          "isDeprecated": false,
          "deprecationReason": null
        }, {
          "name": "UNION",
          "description": "Indicates this type is a union. `possibleTypes` is a valid field.",
          "isDeprecated": false,
          "deprecationReason": null
        }, {
          "name": "ENUM",
          "description": "Indicates this type is an enum. `enumValues` is a valid field.",
          "isDeprecated": false,
          "deprecationReason": null
        }, {
          "name": "INPUT_OBJECT",
          "description": "Indicates this type is an input object. `inputFields` is a valid field.",
          "isDeprecated": false,
          "deprecationReason": null
        }, {
          "name": "LIST",
          "description": "Indicates this type is a list. `ofType` is a valid field.",
          "isDeprecated": false,
          "deprecationReason": null
        }, {
          "name": "NON_NULL",
          "description": "Indicates this type is a non-null. `ofType` is a valid field.",
          "isDeprecated": false,
          "deprecationReason": null
        }],
        "fields": null,
        "kind": "ENUM",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "BigDecimal",
        "description": null,
        "interfaces": null,
        "enumValues": null,
        "fields": null,
        "kind": "SCALAR",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "BigInt",
        "description": "Arbitrary big integer value",
        "interfaces": null,
        "enumValues": null,
        "fields": null,
        "kind": "SCALAR",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "Boolean",
        "description": null,
        "interfaces": null,
        "enumValues": null,
        "fields": null,
        "kind": "SCALAR",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "Float",
        "description": null,
        "interfaces": null,
        "enumValues": null,
        "fields": null,
        "kind": "SCALAR",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "ID",
        "description": null,
        "interfaces": null,
        "enumValues": null,
        "fields": null,
        "kind": "SCALAR",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "Int",
        "description": "32-bit integer value",
        "interfaces": null,
        "enumValues": null,
        "fields": null,
        "kind": "SCALAR",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "Long",
        "description": "64-bit integer value",
        "interfaces": null,
        "enumValues": null,
        "fields": null,
        "kind": "SCALAR",
        "possibleTypes": null
      }, {
        "inputFields": null,
        "name": "String",
        "description": null,
        "interfaces": null,
        "enumValues": null,
        "fields": null,
        "kind": "SCALAR",
        "possibleTypes": null
      }]
    }
  }
}